class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> result = new ArrayList<List<Integer>>();
        if (numRows <= 0) {
            return result;
        }
        ArrayList<Integer> previousRow = new ArrayList<>();
        previousRow.add(1);//第一行只有一个数，先加上
        result.add(previousRow);
        
        for (int i = 1; i <= numRows - 1; i++) {//从第二行开始有“前一行”
            ArrayList<Integer> currentRow = new ArrayList<>();//新建一个array存当前行，当前行比前一行多两个元素
            currentRow.add(1);//当前行的第一个元素为1，接下来从当前行的第二个元素开始
            for (int j = 0; j < previousRow.size() - 1; j++) {//从上一行的第一个元素到最后一个元素都会参与计算
                currentRow.add(previousRow.get(j) + previousRow.get(j+1));//前一行相邻两个元素相加，比如当前行的第2个元素就是上一行第0个和第1个相加
            }
            currentRow.add(1);//当前行最后一个元素是1
            result.add(currentRow);
            previousRow = currentRow;
        }
        return result;
    }
}
