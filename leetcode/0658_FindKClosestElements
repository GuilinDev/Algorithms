class Solution {
    /*
    这道题给了一个数组，还有两个变量k和x。让我们找数组中离x最近的k个元素，而且说明了数组是有序的，如果两个数字距离x相等的话，取较小的那个。从给定的例子可以分析出x不一定是数组中的数字，由于数组是有序的，所以最后返回的k个元素也一定是有序的，那么其实就是返回了原数组的一个长度为k的子数组，转化一下，实际上相当于在长度为n的数组中去掉n-k个数字，而且去掉的顺序肯定是从两头开始去，应为距离x最远的数字肯定在首尾出现。那么问题就变的明朗了，每次比较首尾两个数字跟x的距离，将距离大的那个数字删除，直到剩余的数组长度为k为止，
    */
    public List<Integer> findClosestElements(int[] arr, int k, int x) {
        int start = 0, end = arr.length - k;
        
        while (start < end) {
            int mid = (start + end) / 2;
            if (x - arr[mid] > arr[mid+k] - x) {
                start = mid + 1;
            } else {
                end = mid;
            }
        }
        //遍历并创建一个List返回
        List<Integer> results = new ArrayList<Integer>();
        for (int i = start; i < start + k; i++) {
            results.add(arr[i]);
        }
        return results;
    }
}
