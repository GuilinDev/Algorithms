class Solution {
    /*
    https://leetcode.com/problems/solve-the-equation/discuss/105311/Concise-Java-Solution
    */
    public String solveEquation(String equation) {
        //按照等号分成两边
        int[] res1 = evaluateExpression(equation.split("=")[0]), res2 = evaluateExpression(equation.split("=")[1]);
        
        res1[0] -= res2[0];
        res1[1] = res2[1] - res1[1];
        if (res1[0] == 0 && res1[1] == 0) {
            return "Infinite solutions";
        }
        if (res1[0] == 0) {
            return "No solution";
        }
        
        return "x=" + res1[1]/res1[0];
    }
    
    private int[] evaluateExpression(String exp) {
        String[] tokens = exp.split("(?=[-+])");
        int[] res = new int[2];
        for (String token : tokens) {
            if (token.equals("+x") || token.equals("x")) {
                res[0] += 1;
            } else if (token.equals("-x")) {
                res[0] -= 1;
            } else if (token.contains("x")) {
                res[0] += Integer.parseInt(token.substring(0, token.indexOf("x")));
            } else {
                res[1] += Integer.parseInt(token);
            }
        }
        return res;
    }
}
