class Solution {
    /*
    O(N): https://leetcode.com/problems/wiggle-sort/discuss/71692/Java-O(N)-solution
    解释https://leetcode.com/problems/wiggle-sort/discuss/71693/My-explanations-of-the-best-voted-Algo
    */
    public void wiggleSort(int[] nums) {
        for (int i = 0; i < nums.length; i++) {
            if (i % 2 == 1) {//奇数
                if (nums[i-1] > nums[i]) {
                    swap(nums, i);
                }
            } else {
                if (i != 0 && nums[i-1] < nums[i]) {
                    swap(nums, i);
                }
            }
        }
    }
    
    private void swap(int[] nums, int i) {
        int temp = nums[i];
        nums[i] = nums[i-1];
        nums[i-1] = temp;
    }
}
