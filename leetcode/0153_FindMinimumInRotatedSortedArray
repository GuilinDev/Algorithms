class Solution {
    public int findMin(int[] nums) {
        if (nums == null || nums.length == 0) {
            return 0;
        }
        if (nums.length == 1) {
            return nums[0];
        }
        int start = 0, end = nums.length - 1;//Binary Search
        while (start < end) {
            int mid = start + (end - start)/2;
            if (mid > 0 && nums[mid] < nums[mid - 1]) {//mid>0为了不溢出
                return nums[mid]; //Binary Search的终止条件，找到了
            }
            if (nums[mid] >= nums[start] && nums[mid] > nums[end]) {//在最后只剩两个元素的时候，向下取整mid等于start，所以这里数组虽然没有重复值，但是需要>=来确定“nums[mid]比它左右两边都‘大’”
                start = mid + 1;
            } else {
                end = mid - 1;
            }
        }

        //如果到这里了还没有找到，那最小值一定就是剩下的那个start到达大于end的值
        return nums[start];
    }
}
