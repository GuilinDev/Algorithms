class Solution {
    /*
    https://leetcode.com/problems/longest-substring-with-at-most-two-distinct-characters/discuss/49682/Simple-O(n)-java-solution-easily-extend-to-k-characters
    维持滑动窗口
    */
    public int lengthOfLongestSubstringTwoDistinct(String s) {
        if (s.length() < 1) {
            return 0;
        }
        HashMap<Character, Integer> index = new HashMap<Character, Integer>();
        int low = 0;
        int high = 0;
        int maxLength = 0;
        
        while (high < s.length()) {
            if (index.size() <= 2) {
                char c = s.charAt(high);
                index.put(c, high);
                high++;
            }
            if (index.size() > 2) {
                int leftMost = s.length();
                for (int i : index.values()) {
                    leftMost = Math.min(leftMost, i);
                }
                char c = s.charAt(leftMost);
                index.remove(c);
                low = leftMost + 1;
            }
            maxLength = Math.max(maxLength, high - low);
        }
        return maxLength;
    }
}
