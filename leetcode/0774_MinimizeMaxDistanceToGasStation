class Solution {
    /*
    https://leetcode.com/problems/minimize-max-distance-to-gas-station/discuss/113633/Easy-and-Concise-Solution-using-Binary-Search-C++JavaPython
    O(NlogM), where N is station length and M is st[N - 1] - st[0]
    */
    public double minmaxGasDist(int[] stations, int K) {
        int count, N = stations.length;
        double left = 0, right = stations[N - 1] - stations[0], mid;
        
        while (left + 1e-6 < right) {
            mid = left + (right - left)/2;
            count = 0;
            for (int i = 0; i < N - 1; i++) {
                count += Math.ceil((stations[i + 1] -stations[i]) / mid) - 1;
            }
            if (count > K) {
                left = mid;
            } else {
                right = mid;
            }
        }
        return right;
    }
}
