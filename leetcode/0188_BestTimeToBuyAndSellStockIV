class Solution {
    /*
    IV的详细分析https://segmentfault.com/a/1190000002565570
    */
    public int maxProfit(int k, int[] prices) {
        int days = prices.length;
        int tradeCount = 0, profitCount = 0, rangeProfitCount = 0;
        for (int i = 1; i < days; i++) {
            if (prices[i-1] < prices[i]) {
                rangeProfitCount += prices[i] - prices[i-1];
                if ( i == days - 1) {
                    profitCount += rangeProfitCount;
                    tradeCount += 1;
                }
            } else if (rangeProfitCount > 0) {
                profitCount += rangeProfitCount;
                tradeCount += 1;
                rangeProfitCount = 0;
            }
        }
        if (tradeCount <= k) {
            return profitCount;
        }
        int[][] global = new int[k+1][days];
        int[][] local = new int[k+1][days];
        for (int i = 1; i <= k; i++) {
            for (int j = 1; j < days; j++) {
                int diff = prices[j] - prices[j-1];
                local[i][j] = Math.max(global[i-1][j-1], local[i][j-1] + diff);
                global[i][j] = Math.max(global[i][j-1], local[i][j]);
            }
        }
        return global[global.length - 1][global[0].length - 1];
    }
}
