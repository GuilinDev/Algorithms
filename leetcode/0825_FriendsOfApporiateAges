class Solution {
    /*
    https://leetcode.com/problems/friends-of-appropriate-ages/discuss/127341/10ms-concise-Java-solution-O(n)-time-and-O(1)-space
    
    */
    public int numFriendRequests(int[] ages) {
        int res = 0;
        int[] numInAge = new int[121], sumInAge = new int[121];
        
        for (int i : ages) {
            numInAge[i]++;
        }
        for (int i = 1; i <= 120; i++) {
            sumInAge[i] = numInAge[i] + sumInAge[i-1];
        }
        for (int i = 15; i <= 120; i++) {
            if (numInAge[i] == 0) continue;
            int count = sumInAge[i] - sumInAge[i / 2 + 7];
            res += count * numInAge[i] - numInAge[i];//people will not friend request themselves, so  - numInAge[i]
        }
        return res;
    }
}
