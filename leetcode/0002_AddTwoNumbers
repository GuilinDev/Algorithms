/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(0);
        ListNode tail = dummy; // create a shallow copy to modify the object
        
        int carry = 0;
        for (ListNode i=l1, j=l2; i != null || j != null;) {
            
            int sum = carry; // at every loop, it is new "sum" + last "carry"
            sum += (i != null) ? i.val : 0;
            sum += (j != null) ? j.val : 0;
            
            tail.next = new ListNode(sum % 10); // add a node at the right of the tail
            tail = tail.next; // point the new tail to null
            
            carry = sum /10;
            i = (i == null) ? i : i.next;// if do not reach the most right one, continue, otherwise stop
            j = (j == null) ? j : j.next;
        }
        
        if (carry != 0) { // handle the carry to the last Node, NOTICE: no matter the two Lists are the same length or not
            tail.next = new ListNode(carry);//put the carry as the newest tail
        }
        
        return dummy.next; // exclude the dummy "head"
    }
}
