class Solution {
    public int threeSumClosest(int[] nums, int target) {
        // similar to 3-sum, but no need to remove duplicates - one solution
        // and no need to return the triplet, instead it will return the sum
        
        if (nums == null || nums.length < 3){
            return 0;
        }
        
        int result = 0;
        Arrays.sort(nums);
        int min = Integer.MAX_VALUE;
        for (int i = 0; i <= nums.length - 3; i++){
             int second = i + 1, third = nums.length - 1;
             while (second < third){
                int sum = nums[i] + nums[second] + nums[third];
                if (Math.abs(sum - target) < min) {
                    min = Math.abs(sum - target);
                    result = sum;
                }
                    
                if (target == sum) {
                    return result;
                } else if (target > sum) {// if already found the closest, it will execute too
                    second++; 
                } else {
                    third--;
                }
            }
        }
        return result;
    }
}
