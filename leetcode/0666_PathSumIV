class Solution {
    /*
    给定深度不超过5的二叉树，用三位数xyz表示节点（x表示深度，y表示在某层的位置，z表示节点的值）。求从根节点到每一个叶子节点的路径之和。
    一个简单的层序遍历。如果是固守之前解层序遍历的通用方法，一个直接的解法就是利用层序关系先构建完整的树，然后再对树进行先序遍历得到结果。但事实上，层序遍历本身已经访问了所有的元素，构建树的本身就是多余操作。我们先构建一个矩阵，把所有的数进行解析，然后对这个矩阵进行层序遍历，即可得到结果。
    */
    public int pathSum(int[] nums) {
        int[][] m = new int[5][8];
        for (int n : nums) {
            int i = n / 100;// i is 1 based index;
            int j = (n % 100) / 10 - 1;// j is 0 based index;
            int v = n % 10;
            m[i][j] = m[i-1][j/2] + v;
        }
        
        int sum = 0;
        for (int i = 1; i < 5; i++) {
            for (int j = 0; j < 8; j++) {
                if (i == 4 || m[i][j] != 0 && m[i+1][j*2] == 0 && m[i + 1][j*2 + 1] == 0) {
                    sum += m[i][j];
                }
            }
        }
        return sum;
    }
}
