class Solution {
    public List<String> generateParenthesis(int n) {
        List<String> list = new ArrayList<String>();
        backtrack(list, "", 0, 0, n);
        return list;
    }
    public void backtrack(List<String> list, String str, int open, int close, int max) {
        if (str.length() == max*2){// open + close
            list.add(str);
            return;
        }
        if(open < max) {//number of parentheses pairs
            backtrack(list, str+"(", open+1, close, max);
        }
        if(close < open) {// make the number of "close parentheses" equal to "open parentheses"
            backtrack(list, str+")", open, close+1, max);
        }
    }
}
