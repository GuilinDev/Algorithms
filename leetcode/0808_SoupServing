class Solution {
    /*
    https://leetcode.com/problems/soup-servings/discuss/121711/C++JavaPython-When-N-greater-4800-just-return-1
   时间和空间都是O(N^2)
    */
    double[][] memo = new double[200][200];
    public double soupServings(int N) {
       return N >= 4800 ? 1.0 : f((N+24) / 25, (N +24) / 25); 
    }
    
    private double f(int a, int b) {
        if (a <= 0 && b <= 0) {
            return 0.5;
        }
        if (a <= 0) {
            return 1;
        }
        if (b <= 0) {
            return 0;
        }
        if (memo[a][b] > 0) {
            return memo[a][b];
        }
        memo[a][b] = 0.25 * (f(a - 4, b) + f(a - 3, b - 1) + f(a - 2, b - 2) + f(a - 1, b - 3));//A为空或A，B同时为空
        return memo[a][b];
    }
}
