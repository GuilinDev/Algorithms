class Solution {
    /*
    讨论区 - https://leetcode.com/problems/wiggle-subsequence/discuss/84849/Very-Simple-Java-Solution-with-detail-explanation
    
    */
    public int wiggleMaxLength(int[] nums) {
        if (nums.length == 0 || nums.length == 1) {
            return nums.length;
        }
        int k = 0;
        while (k < nums.length - 1 && nums[k] == nums[k+1]) {//Skips all the same numbers from series beginning eg 5, 5, 5, 1
            k++;
        }
        
        if (k == nums.length - 1) {
            return 1;
        }
        
        int result = 2;// This will track the result of result array
        boolean smallReq = nums[k] < nums[k+1];//To check series starting pattern
        for (int i = k + 1; i < nums.length - 1; i++) {
            if (smallReq && nums[i+1] < nums[i]) {
                nums[result] = nums[i+1];
                result++;
                smallReq = !smallReq;//Toggle the requirement from small to big number
            } else {
                if (!smallReq && nums[i+1] > nums[i]) {
                    nums[result] = nums[i+1];
                    result++;
                    smallReq = !smallReq;//Toggle the requirement from big to small number
                }
            }
        }
        return result;
    }
}
