/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    //二叉树的中序遍历，先左后根再右，左根右，转换成一个List返回
    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> list = new ArrayList<Integer>();
        Stack<TreeNode> stack = new Stack<TreeNode>();
        
        TreeNode current = root;
        
        while (current != null || !stack.isEmpty()) {//注意是||不是&&
            while (current != null) {//先压入所有左子树
                stack.add(current);
                current = current.left;
            }
            current = stack.pop();//从最左（stack最上面）一个弹出来，开始计算
            list.add(current.val);
            current = current.right;
        }
        return list;
    }
}
