class Solution {
    /*
    多种解法：http://blog.csdn.net/yeshiwu/article/details/52385994
    */
    public int kthSmallest(int[][] matrix, int k) {
        //二分查找
        int matrixRowSize = matrix.length;
        int matrixColSize = matrix[0].length;
        int minVal = matrix[0][0];
        int maxVal = matrix[matrixRowSize-1][matrixColSize-1];
        int midVal = 0;
        int count = 0;
        
        while (minVal < maxVal) {
            midVal = minVal + (maxVal - minVal)/2;
            for (int i = 0; i < matrixRowSize && matrix[i][0] <= midVal; i++) {
                for (int j = 0; j < matrixColSize; j++) {
                    if (matrix[i][j] <= midVal) {
                        count++;
                    }
                }
            }
            if (k <= count) {
                maxVal = midVal;
            } else {
                minVal = midVal + 1;
            }
            count = 0;
        }
        return minVal;
    }
}
