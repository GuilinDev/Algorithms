class Solution {
    /*
    这题给一个string的数组，然后再给一个licensePlate问你string数组里面拥有licensePlate全部字母的长度最小的一个字符串是多少
    https://leetcode.com/problems/shortest-completing-word/discuss/110137/Java-Solution-using-character-Array
    */
    public String shortestCompletingWord(String licensePlate, String[] words) {
        String target = licensePlate.toLowerCase();
        int[] charMap = new int[26];
        
        //建立字符map
        for (int i = 0; i < target.length(); i++) {
            if (Character.isLetter(target.charAt(i))) {
                charMap[target.charAt(i) - 'a']++;
            }
        }
        
        int minLength = Integer.MAX_VALUE;
        String result = null;
        for (int i = 0; i < words.length; i++) {
            String word = words[i].toLowerCase();
            if (matches(word, charMap) && word.length() < minLength) {
                minLength = word.length();
                result = words[i];
            }
        }
        return result;
    }
    
    private boolean matches(String word, int[] charMap) {
        int[] targetMap = new int[26];
        for (int i = 0; i < word.length(); i++) {
            if (Character.isLetter(word.charAt(i))) {
                targetMap[word.charAt(i) - 'a']++;
            }
        }
        for (int i = 0; i < 26; i++) {
            if (charMap[i] != 0 && targetMap[i] < charMap[i]) {
                return false;
            }
        }
        return true;
    }
}
