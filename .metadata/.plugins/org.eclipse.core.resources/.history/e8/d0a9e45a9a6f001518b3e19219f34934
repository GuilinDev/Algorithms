package com.guilin.leet;

public class AddDigitsLC258 {
	/*
	 * Given a non-negative integer num, repeatedly add all its digits until the result has only one digit.

	 *For example:

		*Given num = 38, the process is like: 3 + 8 = 11, 1 + 1 = 2. Since 2 has only one digit, return it.

		*Follow up:
		*Could you do it without any loop/recursion in O(1) runtime?

	*Hint:
		*A naive implementation of the above process is trivial. Could you come up with other methods? 
		
	 */
	
	// Native solution
	public int addDigits(int num) {
        int target = num;
        int digits = 10;
        
        while (digits >= 10) {
            digits = 0;
            while (target > 0) {
                digits += target % 10;
                target /= 10;
            }
            target = digits;
        }
        return digits;
    }
	
	// O(1) solution
	
}
